name: Laravel CI/CD

on:
  push:
    branches:
      - main

jobs:
  test: # ✅ First job (CI)
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: laravel_test
          MYSQL_USER: laravel_user
          MYSQL_PASSWORD: laravel_password
        ports:
          - 3306:3306

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, pdo, pdo_mysql, xml

      - name: Install Dependencies
        run: composer install --no-progress --prefer-dist

      - name: Ensure .env file exists
        run: |
          cp .env.example .env
          php artisan key:generate
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=laravel_test" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=rootpassword" >> .env

      - name: Wait for MySQL to be Ready
        run: |
          until mysqladmin ping -h"127.0.0.1" -uroot -prootpassword --silent; do
            echo "Waiting for MySQL..."
            sleep 3
          done
          echo "MySQL is ready!"

      - name: Run Migrations & Seed Database
        run: php artisan migrate:fresh --seed

      - name: Clear Config & Cache
        run: |
          php artisan config:clear
          php artisan cache:clear

      - name: Run Tests
        run: php artisan test

      ## Optional Enhancements - Static Code Analysis, Security Checks, Coverage
      - name: Run Laravel Pint (Code Formatter)
        run: vendor/bin/pint --test

      - name: Run Tests with Coverage
        run: php artisan test --coverage-text

  deploy: # ✅ Second job (CD) - Runs only if `test` passes
    needs: test # ⛔ Blocks deployment if CI fails
    runs-on: ubuntu-latest
    steps:
      - name: Install Expect
        run: sudo apt-get update && sudo apt-get install -y expect

      - name: SSH into Server and Deploy
        run: |
          expect <<EOF
          spawn ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}
          expect "password:"
          send "${{ secrets.SSH_PASSWORD }}\r"
          expect "$ "
          send "cd /home/${{ secrets.SSH_USER }}/public_html/hmvc-laravel/\r"
          # Force fetch latest changes
          send "git fetch --all --force\r"

          # Hard reset to latest main (discarding local changes)
          send "git reset --hard origin/main\r"

          # Force pull latest code
          send "git pull origin main --force\r"

          send "composer2 install --no-interaction --prefer-dist --optimize-autoloader\r"
          send "composer2 update --no-interaction\r"

          # Ensure .env file exists
          send "cp .env.example .env\r"
          send "php artisan key:generate\r"

          # Run Laravel Migrations & Seeders
          send "php artisan migrate:fresh --seed --force\r"

          # Optimize Laravel
          send "composer2 dump-autoload\r"

          # Start Queue Workers
          send "php artisan queue:restart &\r"
          send "php artisan queue:work --daemon &\r"
          send "php artisan schedule:work &\r"

          send "exit\r"
          expect eof
          EOF
      - name: TEST AND RUN CRON JOB
        run: |
          expect <<EOF
          spawn ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}
          expect "password:"
          send "${{ secrets.SSH_PASSWORD }}\r"
          expect "$ "
          send "cd /home/${{ secrets.SSH_USER }}/public_html/hmvc-laravel/\r"

          # Run Laravel Tests
          send "php artisan test\r"
          send "php artisan queue:restart &\r"
          send "php artisan queue:work --daemon &\r"
          send "php artisan schedule:work &\r"
          send "/usr/bin/php /home/u313493766/public_html/hmvc-laravel/artisan queue:work --tries=3 --timeout=90 &\r"



          send "exit\r"
          expect eof
          EOF
